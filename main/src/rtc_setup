#!/bin/bash

### BEGIN INIT INFO
# Provides:          rtc_setup
# Default-Start:     1 2 3 4 5
# Default-Stop:      0 6
### END INIT INFO

set -eu -o pipefail # fail on error , debug all lines

if [ 'root' != $( whoami ) ] ; then
  echo "Please run as root! ( sudo ${0} )"
  exit 1;
fi


trap 'interrupt' 2 # signal 2 is SIGINT, run interrupt function if get intterupted
trap 'handleError' ERR # ERR is one of the signal specifications implemented internally by bash. Another way: if [ $? != 0 ]; then handleError; fi

interrupt() {
	echo
    echo "You can't do that!"
    echo
}

handleError() {
    echo
    echo "==================="
	echo "       ERROR       "
    echo "==================="
	echo

	trap - 2 # remove trap
	trap - ERR # remove trap

    exit 1
}

FLAGDIR=/home

if [ ! -f $FLAGDIR/rtc_setup_flag ]; then
	echo "Please make sure this device is connected to the internet."
	echo "This setup will automatically restart the system."
	echo -n "Confirm to install? [Y/N]: "
	read input
	if ! [ $input == "y" ] || [ $input == "Y" ]; then
		{ echo "Exiting..."; exit 1; }
	fi

	## https://raspberry-projects.com/pi/programming-in-python/i2c-programming-in-python/using-the-i2c-interface-2
	if [ 0 -eq $( grep -c 'i2c-dev' /etc/modules ) ] ; then # check if the phrase "i2c-dev" existed in the file or not
		echo "i2c-dev" | tee -a /etc/modules
	fi
	if [ 0 -eq $( grep -c 'i2c-bcm2708' /etc/modules ) ] ; then # check if the phrase existed in the file or not
		echo "i2c-bcm2708" | tee -a /etc/modules
	fi
	if [ 0 -eq $( grep -c 'dtoverlay=i2c-rtc,ds3231' /boot/config.txt ) ] ; then # check if the phrase existed in the file or not
		echo "dtoverlay=i2c-rtc,ds3231" | tee -a /boot/config.txt
	fi

	# apt-get install -y python-smbus python3-smbus i2c-tools

	apt-get -y remove fake-hwclock
	update-rc.d -f fake-hwclock remove
	systemctl disable fake-hwclock

	sed -i -e '/^if \[ -e \/run\/systemd\/system \] ; then$/,+2 s/^/#/' /lib/udev/hwclock-set
	sed -i -e '/^.*\/sbin\/hwclock --rtc=\$dev --systz --badyear$/ s/^/#/' /lib/udev/hwclock-set
	sed -i -e '/^.*\/sbin\/hwclock --rtc=\$dev --systz$/ s/^/#/' /lib/udev/hwclock-set

	touch $FLAGDIR/rtc_setup_flag
	cp rtc_setup /etc/init.d/
	update-rc.d rtc_setup defaults
	reboot -h now
else
	# automatically get and set time from the internet (workaround for proxy setting)
	date -s "$(wget -qSO- --timeout=10 --max-redirect=0 google.vn 2>&1 | grep Date: | cut -d' ' -f5-8)Z"
	hwclock --verbose -r
	hwclock -w

	rm -f $FLAGDIR/rtc_setup_flag
	update-rc.d -f rtc_setup remove
	rm /etc/init.d/rtc_setup
fi

trap - 2 # remove trap
trap - ERR # remove trap